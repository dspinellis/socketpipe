.TH SOCKETPIPE 1 "9 June 2015"
.\"
.\" (C) Copyright 2003-2015 Diomidis Spinellis.  All rights reserved.
.\"
.\" Permission to use, copy, and distribute this software and its
.\" documentation for any purpose and without fee for noncommercial use
.\" is hereby granted, provided that the above copyright notice appear in
.\" all copies and that both that copyright notice and this permission notice
.\" appear in supporting documentation.
.\"
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.SH NAME
socketpipe \- zero overhead remote process plumbing
.SH SYNOPSIS
\fBsocketpipe\fP
[\fB\-b\fP]
[\fB\-h\fP \fIhost\fP]
[\fB\-i\fP \fB{\fP \fIinput generation command\fP [\fIargs\fP ... ] \fB}\fP ]
\fB\-l\fP \fB{\fP \fIlogin command\fP [\fIargs\fP ... ] \fB}\fP
\fB\-r\fP \fB{\fP \fIremote command\fP [\fIargs\fP ... ] \fB}\fP
[\fB\-o\fP \fB{\fP \fIoutput processing command\fP [\fIargs\fP ... ] \fB}\fP ]
.SH DESCRIPTION
\fISocketpipe\fP 
connects over a TCP/IP socket the \fIremote command\fP specified
to the local \fIinput generation command\fP and/or the local
\fIoutput processing command\fP.
At least one of the two local commands must be specified.
The input and output of the \fIremote command\fP are appropriately
redirected so that the remote command's input will come from the local
\fIinput generation command\fP and the remote command's output will
be sent to the local \fIoutput processing command\fP.
The remote command is executed on the machine accessed through
the \fIlogin command\fP.
The \fIsocketpipe\fP executable should be available through the execution path
in the remote machine.
The braces used for delimiting the commands and their arguments should
be space-separated and can be nested.
This feature allows you to setup complex and efficient topologies of
distributed communicating processes.
.PP
Although the initial \fIsocketpipe\fP communication setup is performed through
client-server intermediaries such as \fIssh(1)\fP or \fIrsh(1)\fP,
the communication channel that \fIsocketpipe\fP establishes is a direct
socket connection between the local and the remote commands.
Without the use of \fIsocketpipe\fP,
when piping remote data through \fIssh(1)\fP or \fIrsh(1)\fP,
each data block is read at the local end by the respective client,
is sent to the remote daemon and written out again to the remote process.
The use of \fIsocketpipe\fP removes the inefficiency of the multiple 
data copies and context switches and can in some cases provide dramatic
throughput improvements.
On the other hand, the confidentiality and integrity of the data passing 
through \fIsocketpipe\fP's data channel is not protected;
\fIsocketpipe\fP should therefore be used only within a confined LAN environment.
(The authentication process uses the protocol of the underlying login
program and is no more or less vulnerable than using the program in isolation;
\fIssh\fP(1) remains secure, \fIrsh\fP(1) continues to be insecure.)
.SH OPTIONS
.IP "\fB\-l\fP \fB{\fP \fIlogin command\fP [\fIargs\fP ... ] \fB}\fP"
Specify the remote login command (see previous section).
Use arguments to this command to specify the host and authentication
options (e.g. username).
The remote login command should accept as further arguments a command and its
arguments and execute it on the remote host.
The remote login command is used to execute a server instance of
\fIsocketpipe\fP on the remote host.
Typical examples of remote login commands are \fIssh(1)\fP and \fIrsh(1)\fP.

.IP "\fB\-r\fP \fB{\fP \fIremote command\fP [\fIargs\fP ... ] \fB}\fP"
Specify the remote processing command (see previous section).
The remote processing command is executed on the remote machine
with its input, output, or both redirected for processing to local commands.

.IP "\fB\-i\fP \fB{\fP \fIinput generation command\fP [\fIargs\fP ... ] \fB}\fP"
Specify the remote input generation command (see previous section).
The output of the input generation command is redirected as input
to the remote command.

.IP "\fB\-o\fP \fB{\fP \fIoutput processing command\fP [\fIargs\fP ... ] \fB}\fP"
Specify the output processing command (see previous section).
The output of the remote command is redirected as input
to the output processing command.

.IP "\fB\-b\fP"
Execute the remote login command in batch mode.
This option should be used when no interaction is needed for authentication
purposes with the remote login command.
This is for example the case when user authentication is performed by means of
private keys (\fIssh(1)\fP) or
(horror) the \fI.rhosts(5)\fP file (\fIrsh(1)\fP).
The option circumvents
two problems in OpenSSH_3.5p1 (and possibly also other remote login commands):
the setting of our (shared) output to non-blocking I/O and attempts to
read from the standard input.
The first problem may manifest itself through an error message 
of the output processing command such as 
"stdout: Resource temporarily unavailable".
The second problem will not allow you to put \fIsocketpipe\fP instances
in the background, stopping them with a tty input signal (SIGTTIN).
The \fB-b\fP option will close the remote login command's
standard output and redirect 
its standard input from /dev/null solving those problems.
On the other hand this flag will disable I/O to/from the remote login
command and may therefore interfere with any interaction required
for the authentication process.

.IP "\fB\-h\fP \fIhost\fP"
Specify the name or address of the local host.
The specified string is used by the remote host to connect back to the
originating local host.
If this option is not set,
the local host address with respect to the remote host is obtained automatically
by opening a connection to the remote host and looking
at the \fISSH_CLIENT\fP environment variable.
Setting this option may be required when the connection to the remote
host is not done via \fIssh\fP or if an alternative routing path is preferred.

.SH EXAMPLE
.PP
.ft C
socketpipe -b -i { tar cf - / } -l { ssh remotehost } -r { dd of=/dev/st0 bs=32k }
.ft P
.br
Backup the local host on a tape drive located on \fIremotehost\fP.
.PP
.ft C
socketpipe -b -l { ssh remotehost } -r { dd if=/dev/st0 bs=32k } -o { tar xpf - /home/luser }
.ft P
.br
Restore a directory using the tape drive on the remote host.
.PP
.ft C
socketpipe -b -i { tar cf - / } -l { ssh remotehost } -r { bzip2 -c } -o { dd of=/dev/st0 bs=32k }
.ft P
.br
Backup the local disk on a local tape, compressing the data on the 
(presumably a lot more powerful) \fIremotehost\fP.
.SH "SEE ALSO"
\fItcpcat\fP(1), \fIzsh\fP(1)
.SH AUTHOR
Diomidis Spinellis -- <http://www.spinellis.gr>
.SH BUGS
The sockets used to connect the local and remote commands may read or write
only parts of the data specified in a \fIread(2)\fP or \fIwrite(2)\fP operation.
Although this is standard behavior, and is for example correctly handled by
the \fIstdio(3)\fP library, some commands may not expect it
and may exhibit strange bugs.
Most examples in Stevens's 
"\fIAdvanced Programming in the UNIX Environment\fP" 
(Addison-Wesley 1992) would fail reading from sockets;
on the other hand Section 6.6 of Stevens's
"\fIUNIX Network Programming\fP" (Prentice Hall 1990)
provides code that deals with this problem.
